Given an array arr[]. Push all the zeros of the given array to the right end of the array while maintaining the order of non-zero elements. Do the mentioned change in the array in place.

Examples:

Input: arr[] = [1, 2, 0, 4, 3, 0, 5, 0]
Output: [1, 2, 4, 3, 5, 0, 0, 0]
Explanation: There are three 0s that are moved to the end.
Input: arr[] = [10, 20, 30]
Output: [10, 20, 30]
Explanation: No change in array as there are no 0s.
Input: arr[] = [0, 0]
Output: [0, 0]
Explanation: No change in array as there are all 0s.



SOLUTION->  

class Solution:
	def pushZerosToEnd(self,arr):
    	length = len(arr)
    	flag = 0
        for i in range(0,length - 1):
    	    if(arr[i] == 0 and arr[i+1] != 0):
    	        if(flag == 0):
        	        arr[i] = arr[i+1]
        	        arr[i+1] = 0
        	    else:
        	        arr[i-flag] = arr[i+1]
        	        arr[i+1] = 0
    	    elif(arr[i] == 0 and arr[i+1] == 0):
    	        flag = flag + 1
	    return arr
